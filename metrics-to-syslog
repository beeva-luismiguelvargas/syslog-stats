#!/bin/sh
### BEGIN INIT INFO
# Provides:          metrics-to-syslog
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       metrics-to-syslog is a daemon which collects system performance statistics periodically and stream it in clean JSON format to a syslog agent
### END INIT INFO

if [ $# -eq 2 ]
then
  INSTANCE=$2
  SCRIPT="/opt/metrics-to-syslog/metrics-to-syslog.py $2"
else
  INSTANCE=""
  SCRIPT="/opt/metrics-to-syslog/metrics-to-syslog.py"
fi

RUNAS=root

PIDFILE=/var/run/metrics-to-syslog${INSTANCE}.pid
LOGFILE=/var/log/metrics-to-syslog${INSTANCE}.log

start() {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service…' >&2
  local CMD="$SCRIPT &>> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service…' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart} [INSTANCE]"
esac
